<?xml version="1.0" encoding="UTF-8"?>
<!--*************************************************************************

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
    
    @author T.Y.Shin (https://github.com/zeroreloaded)
    
*****************************************************************************-->

<project name="ZRDD Aviation ASTERIX Decoder" basedir="." default="">
	<property name="src.dir" location="."/>
    <property name="src.java.dir" location="${src.dir}/src"/>
    <property name="src.test.dir" location="${src.dir}/test"/>
    <property name="target.dir" location="build"/>
    <property name="target.classes.java.dir" location="${target.dir}/classes"/>
    <property name="target.classes.test.dir" location="${target.dir}/test/classes"/>
    <property name="target.report.dir" location="${target.dir}/report"/>
	<property name="spec.dir" value="${src.dir}/spec" />
	<property name="lib.dir" value="${src.dir}/lib"/>
	<property name="conf.dir" value="${src.dir}/conf" />
	<property name="deploy.dir" value="${src.dir}/deploy"/>
	
	<path id="master-classpath">
    	<fileset dir="${lib.dir}">
        	<include name="**/*.jar"/>
        	<include name="**/*.zip"/>
      	</fileset>
      	<pathelement path="${java.class.path}"/>
	</path>
	
    <path id="run-classpath">
	   	<fileset dir="${lib.dir}">
       	 	<include name="**/*.jar"/>
       	 	<include name="**/*.zip"/>
      	</fileset>
      	<pathelement location="${target.classes.java.dir}"/>
      	<pathelement path="${java.class.path}"/>
	</path>
	
	<path id="jar-classpath">
	   	<fileset dir="${lib.dir}">
       	 	<include name="*.jar"/>
       	 	<include name="**/*.zip"/>
      	</fileset>
		<pathelement location="${target.classes.java.dir}"/>
	</path>
	
	<path id="test-classpath">
	   	<fileset dir="${lib.dir}">
       	 	<include name="**/*.jar"/>
       	 	<include name="**/*.zip"/>
      	</fileset>
      	<pathelement location="${target.classes.java.dir}"/>
        <pathelement location="${target.classes.test.dir}"/>
      	<pathelement path="${java.class.path}"/>
	</path>
	
    <target name="compile.java">
        <mkdir dir="${target.classes.java.dir}"/>
        <javac destdir="${target.classes.java.dir}" includeantruntime="false" >
            <src path="${src.java.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
        <copy file="${conf.dir}/log4j.properties" tofile="${target.classes.java.dir}/log4j.properties" />
        
        <mkdir dir="${target.classes.java.dir}/lib" />
		<copy todir="${target.classes.java.dir}/lib">
			<fileset dir="${lib.dir}"/>
		</copy>
		
		<mkdir dir="${target.classes.java.dir}/conf" />
		<copy todir="${target.classes.java.dir}/conf">
			<fileset dir="${conf.dir}"/>
		</copy>
		
		<mkdir dir="${target.classes.java.dir}/spec" />
		<copy todir="${target.classes.java.dir}/spec">
			<fileset dir="${spec.dir}"/>
		</copy>
		
    </target>
 
    <target name="compile.test" depends="compile.java">
        <mkdir dir="${target.classes.test.dir}"/>
        <javac destdir="${target.classes.test.dir}" includeantruntime="false" >
            <src path="${src.test.dir}"/>
            <classpath refid="test-classpath"/>
        </javac>
    </target>
 
    <target name="build" depends="clean,compile.java,compile.test"/>
    
    <target name="test" depends="build" description="TEST">
        <mkdir dir="${target.report.dir}"/>
 
        <junit printsummary="yes" haltonerror="yes" haltonfailure="yes">
            <formatter type="plain" usefile="false"/>
            <formatter type="xml"/>
            <batchtest todir="${target.report.dir}">
                <fileset dir="${src.test.dir}">
                    <include name="**/Test*.java"/>
                    <exclude name="**/Test*All.java"/>
                </fileset>
            </batchtest>
            <classpath refid="test-classpath"/>
            
        </junit>
    </target>
 
    <target name="report" depends="test">
        <mkdir dir="${target.report.dir}/html"/>
        <junitreport todir="${target.report.dir}">
            <fileset dir="${target.report.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${target.report.dir}/html"/>
        </junitreport>
    </target>
    
    <target name="deploy" depends="build">
        <delete dir="${deploy.dir}"/>
        <mkdir dir="${deploy.dir}"/>
        
        <manifestclasspath property="jar.cp" jarfile="yts_asterix_decoder.jar">
            <classpath refid="jar-classpath"/>
        </manifestclasspath>        
    
        <jar destfile="${deploy.dir}/yts_asterix_decoder.jar" basedir="${target.classes.java.dir}">
            <manifest>
                <attribute name="Main-Class" value=""/>
                <attribute name="Class-Path" value="${jar.cp}"/>
            </manifest>
        </jar>
    </target>
    
	<target name="clean" description="Clean output directories">
    	<delete dir="${target.dir}"/>
	</target>
</project>
